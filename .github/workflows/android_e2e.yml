name: Android E2E

on:
  pull_request:

env:
  TZ: "Asia/Tokyo"

# 並列実行の制御
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # タイムアウト設定
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ssh-key: ${{ secrets.FONTS_SSH_KEY }}

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Restore .env.local
        shell: bash
        run: echo "$DOTENV_LOCAL" | tr -d '\r' > ./.env.local
        env:
          DOTENV_LOCAL: ${{ secrets.DOTENV_LOCAL }}

      - name: Restore google-services.json
        shell: bash
        run: echo "$GOOGLE_SERVICES_JSON" | tr -d '\r' > ./android/app/src/dev/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Restore play-store-credentials.json
        shell: bash
        run: echo "$PLAY_STORE_CREDENTIALS_JSON" | tr -d '\r' > ./android/play-store-credentials.json
        env:
          PLAY_STORE_CREDENTIALS_JSON: ${{ secrets.PLAY_STORE_CREDENTIALS_JSON }}

      - name: Restore release.keystore
        shell: bash
        run: echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > ./android/app/release.keystore
        env:
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}

      - name: Restore sentry.properties
        shell: bash
        run: echo "${{ secrets.SENTRY_PROPERTIES_BASE64 }}" | base64 --decode > ./android/sentry.properties
        env:
          SENTRY_PROPERTIES_BASE64: ${{ secrets.SENTRY_PROPERTIES_BASE64 }}

      - name: Install maestro
        run: |
          curl -fsSL "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH
          $HOME/.maestro/bin/maestro --version

      - name: List available system images
        run: |
          echo "📋 Available system images:"
          sdkmanager --list | grep "system-images" | head -20

      - name: Setup Android SDK + emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          emulator-options: -no-window -gpu swiftshader_indirect
          script: |
            set -e
            
            echo "🌐 Starting Metro Bundler..."
            nohup pnpm start --reset-cache > metro.log 2>&1 &
            METRO_PID=$!
            
            echo "⏳ Waiting for Metro Bundler..."
            for i in {1..24}; do
              if curl -f http://localhost:8081/status > /dev/null 2>&1; then
                echo "✅ Metro Bundler is ready"
                break
              fi
              if [ $i -eq 24 ]; then
                echo "❌ Metro Bundler failed to start after 120 seconds"
                cat metro.log
                kill $METRO_PID 2>/dev/null || true
                exit 1
              fi
              echo "Waiting... ($i/24)"
              sleep 5
            done
            
            echo "📱 Building and installing Android app..."
            adb devices
            
            pnpm run android -- --variant devRelease --no-packager
            
            echo "⏳ Waiting for app to start..."
            sleep 45
            
            echo "🧪 Running Maestro tests..."
            maestro test Flow.yaml --format junit --output maestro-results.xml
            
            echo "🧹 Cleaning up..."
            kill $METRO_PID 2>/dev/null || true
            pkill -f "metro" 2>/dev/null || true
            
            echo "🔄 Shutting down emulator..."
            adb emu kill 2>/dev/null || echo "⚠️ Emulator already stopped"

      - name: Upload Metro logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: metro-logs-${{ github.run_number }}
          path: metro.log

      - name: Upload Maestro screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-screenshots-${{ github.run_number }}
          path: maestro-screenshots/
          retention-days: 30

      - name: Upload Maestro test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-test-results-${{ github.run_number }}
          path: maestro-results.xml
          retention-days: 30

      - name: Cleanup
        if: always()
        run: |
          # Metro Bundlerのクリーンアップ
          pkill -f "pnpm start" || true
          pkill -f "metro" || true
          
          # エミュレーター関連プロセスのクリーンアップ
          pkill -f "emulator" || true
          pkill -f "qemu" || true
          
          # adbプロセスのクリーンアップ
          adb kill-server 2>/dev/null || true