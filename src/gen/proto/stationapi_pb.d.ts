// @generated by protoc-gen-es v1.10.0
// @generated from file proto/stationapi.proto (package app.trainlcd.grpc, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, type proto3 } from '@bufbuild/protobuf';

/**
 * @generated from enum app.trainlcd.grpc.OperationStatus
 */
export declare enum OperationStatus {
  /**
   * @generated from enum value: InOperation = 0;
   */
  InOperation = 0,

  /**
   * @generated from enum value: NotOpened = 1;
   */
  NotOpened = 1,

  /**
   * @generated from enum value: Closed = 2;
   */
  Closed = 2,
}

/**
 * @generated from enum app.trainlcd.grpc.StopCondition
 */
export declare enum StopCondition {
  /**
   * @generated from enum value: All = 0;
   */
  All = 0,

  /**
   * @generated from enum value: Not = 1;
   */
  Not = 1,

  /**
   * @generated from enum value: Partial = 2;
   */
  Partial = 2,

  /**
   * @generated from enum value: Weekday = 3;
   */
  Weekday = 3,

  /**
   * @generated from enum value: Holiday = 4;
   */
  Holiday = 4,

  /**
   * @generated from enum value: PartialStop = 5;
   */
  PartialStop = 5,
}

/**
 * @generated from enum app.trainlcd.grpc.TrainDirection
 */
export declare enum TrainDirection {
  /**
   * @generated from enum value: Both = 0;
   */
  Both = 0,

  /**
   * @generated from enum value: Inbound = 1;
   */
  Inbound = 1,

  /**
   * @generated from enum value: Outbound = 2;
   */
  Outbound = 2,
}

/**
 * @generated from enum app.trainlcd.grpc.TrainTypeKind
 */
export declare enum TrainTypeKind {
  /**
   * @generated from enum value: Default = 0;
   */
  Default = 0,

  /**
   * @generated from enum value: Branch = 1;
   */
  Branch = 1,

  /**
   * @generated from enum value: Rapid = 2;
   */
  Rapid = 2,

  /**
   * @generated from enum value: Express = 3;
   */
  Express = 3,

  /**
   * @generated from enum value: LimitedExpress = 4;
   */
  LimitedExpress = 4,

  /**
   * @generated from enum value: HighSpeedRapid = 5;
   */
  HighSpeedRapid = 5,
}

/**
 * @generated from enum app.trainlcd.grpc.DistanceResponseState
 */
export declare enum DistanceResponseState {
  /**
   * @generated from enum value: Away = 0;
   */
  Away = 0,

  /**
   * @generated from enum value: Arrived = 1;
   */
  Arrived = 1,

  /**
   * @generated from enum value: Approaching = 2;
   */
  Approaching = 2,
}

/**
 * @generated from enum app.trainlcd.grpc.LineType
 */
export declare enum LineType {
  /**
   * @generated from enum value: OtherLineType = 0;
   */
  OtherLineType = 0,

  /**
   * @generated from enum value: BulletTrain = 1;
   */
  BulletTrain = 1,

  /**
   * @generated from enum value: Normal = 2;
   */
  Normal = 2,

  /**
   * @generated from enum value: Subway = 3;
   */
  Subway = 3,

  /**
   * @generated from enum value: Tram = 4;
   */
  Tram = 4,

  /**
   * @generated from enum value: MonorailOrAGT = 5;
   */
  MonorailOrAGT = 5,
}

/**
 * @generated from enum app.trainlcd.grpc.CompanyType
 */
export declare enum CompanyType {
  /**
   * @generated from enum value: OtherCompany = 0;
   */
  OtherCompany = 0,

  /**
   * @generated from enum value: JR = 1;
   */
  JR = 1,

  /**
   * @generated from enum value: Private = 2;
   */
  Private = 2,

  /**
   * @generated from enum value: Major = 3;
   */
  Major = 3,

  /**
   * @generated from enum value: SemiMajor = 4;
   */
  SemiMajor = 4,
}

/**
 * @generated from message app.trainlcd.grpc.GetStationByIdRequest
 */
export declare class GetStationByIdRequest extends Message<GetStationByIdRequest> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  constructor(data?: PartialMessage<GetStationByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationByIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationByIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationByIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationByIdRequest;

  static equals(
    a: GetStationByIdRequest | PlainMessage<GetStationByIdRequest> | undefined,
    b: GetStationByIdRequest | PlainMessage<GetStationByIdRequest> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationByIdListRequest
 */
export declare class GetStationByIdListRequest extends Message<GetStationByIdListRequest> {
  /**
   * @generated from field: repeated uint32 ids = 1;
   */
  ids: number[];

  constructor(data?: PartialMessage<GetStationByIdListRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationByIdListRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationByIdListRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationByIdListRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationByIdListRequest;

  static equals(
    a:
      | GetStationByIdListRequest
      | PlainMessage<GetStationByIdListRequest>
      | undefined,
    b:
      | GetStationByIdListRequest
      | PlainMessage<GetStationByIdListRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationByGroupIdRequest
 */
export declare class GetStationByGroupIdRequest extends Message<GetStationByGroupIdRequest> {
  /**
   * @generated from field: uint32 group_id = 1;
   */
  groupId: number;

  constructor(data?: PartialMessage<GetStationByGroupIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationByGroupIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationByGroupIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationByGroupIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationByGroupIdRequest;

  static equals(
    a:
      | GetStationByGroupIdRequest
      | PlainMessage<GetStationByGroupIdRequest>
      | undefined,
    b:
      | GetStationByGroupIdRequest
      | PlainMessage<GetStationByGroupIdRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationByCoordinatesRequest
 */
export declare class GetStationByCoordinatesRequest extends Message<GetStationByCoordinatesRequest> {
  /**
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional uint32 limit = 3;
   */
  limit?: number;

  constructor(data?: PartialMessage<GetStationByCoordinatesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationByCoordinatesRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationByCoordinatesRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationByCoordinatesRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationByCoordinatesRequest;

  static equals(
    a:
      | GetStationByCoordinatesRequest
      | PlainMessage<GetStationByCoordinatesRequest>
      | undefined,
    b:
      | GetStationByCoordinatesRequest
      | PlainMessage<GetStationByCoordinatesRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationByLineIdRequest
 */
export declare class GetStationByLineIdRequest extends Message<GetStationByLineIdRequest> {
  /**
   * @generated from field: uint32 line_id = 1;
   */
  lineId: number;

  /**
   * @generated from field: optional uint32 station_id = 2;
   */
  stationId?: number;

  constructor(data?: PartialMessage<GetStationByLineIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationByLineIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationByLineIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationByLineIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationByLineIdRequest;

  static equals(
    a:
      | GetStationByLineIdRequest
      | PlainMessage<GetStationByLineIdRequest>
      | undefined,
    b:
      | GetStationByLineIdRequest
      | PlainMessage<GetStationByLineIdRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationsByNameRequest
 */
export declare class GetStationsByNameRequest extends Message<GetStationsByNameRequest> {
  /**
   * @generated from field: string station_name = 1;
   */
  stationName: string;

  /**
   * @generated from field: optional uint32 limit = 2;
   */
  limit?: number;

  /**
   * @generated from field: optional uint32 from_station_group_id = 3;
   */
  fromStationGroupId?: number;

  constructor(data?: PartialMessage<GetStationsByNameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetStationsByNameRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationsByNameRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationsByNameRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationsByNameRequest;

  static equals(
    a:
      | GetStationsByNameRequest
      | PlainMessage<GetStationsByNameRequest>
      | undefined,
    b:
      | GetStationsByNameRequest
      | PlainMessage<GetStationsByNameRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetRouteRequest
 */
export declare class GetRouteRequest extends Message<GetRouteRequest> {
  /**
   * @generated from field: uint32 from_station_group_id = 1;
   */
  fromStationGroupId: number;

  /**
   * @generated from field: uint32 to_station_group_id = 2;
   */
  toStationGroupId: number;

  /**
   * @generated from field: uint32 page_size = 3;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken: string;

  constructor(data?: PartialMessage<GetRouteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetRouteRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetRouteRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetRouteRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetRouteRequest;

  static equals(
    a: GetRouteRequest | PlainMessage<GetRouteRequest> | undefined,
    b: GetRouteRequest | PlainMessage<GetRouteRequest> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetStationsByLineGroupIdRequest
 */
export declare class GetStationsByLineGroupIdRequest extends Message<GetStationsByLineGroupIdRequest> {
  /**
   * @generated from field: uint32 line_group_id = 1;
   */
  lineGroupId: number;

  constructor(data?: PartialMessage<GetStationsByLineGroupIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName =
    'app.trainlcd.grpc.GetStationsByLineGroupIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetStationsByLineGroupIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetStationsByLineGroupIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetStationsByLineGroupIdRequest;

  static equals(
    a:
      | GetStationsByLineGroupIdRequest
      | PlainMessage<GetStationsByLineGroupIdRequest>
      | undefined,
    b:
      | GetStationsByLineGroupIdRequest
      | PlainMessage<GetStationsByLineGroupIdRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetTrainTypesByStationIdRequest
 */
export declare class GetTrainTypesByStationIdRequest extends Message<GetTrainTypesByStationIdRequest> {
  /**
   * @generated from field: uint32 station_id = 1;
   */
  stationId: number;

  constructor(data?: PartialMessage<GetTrainTypesByStationIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName =
    'app.trainlcd.grpc.GetTrainTypesByStationIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetTrainTypesByStationIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetTrainTypesByStationIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetTrainTypesByStationIdRequest;

  static equals(
    a:
      | GetTrainTypesByStationIdRequest
      | PlainMessage<GetTrainTypesByStationIdRequest>
      | undefined,
    b:
      | GetTrainTypesByStationIdRequest
      | PlainMessage<GetTrainTypesByStationIdRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetLineByIdRequest
 */
export declare class GetLineByIdRequest extends Message<GetLineByIdRequest> {
  /**
   * @generated from field: uint32 line_id = 1;
   */
  lineId: number;

  constructor(data?: PartialMessage<GetLineByIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetLineByIdRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetLineByIdRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetLineByIdRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetLineByIdRequest;

  static equals(
    a: GetLineByIdRequest | PlainMessage<GetLineByIdRequest> | undefined,
    b: GetLineByIdRequest | PlainMessage<GetLineByIdRequest> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.CoordinatesRequest
 */
export declare class CoordinatesRequest extends Message<CoordinatesRequest> {
  /**
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional uint32 line_id = 3;
   */
  lineId?: number;

  constructor(data?: PartialMessage<CoordinatesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.CoordinatesRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): CoordinatesRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): CoordinatesRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): CoordinatesRequest;

  static equals(
    a: CoordinatesRequest | PlainMessage<CoordinatesRequest> | undefined,
    b: CoordinatesRequest | PlainMessage<CoordinatesRequest> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetLinesByNameRequest
 */
export declare class GetLinesByNameRequest extends Message<GetLinesByNameRequest> {
  /**
   * @generated from field: string line_name = 1;
   */
  lineName: string;

  /**
   * @generated from field: optional uint32 limit = 2;
   */
  limit?: number;

  constructor(data?: PartialMessage<GetLinesByNameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetLinesByNameRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetLinesByNameRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetLinesByNameRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetLinesByNameRequest;

  static equals(
    a: GetLinesByNameRequest | PlainMessage<GetLinesByNameRequest> | undefined,
    b: GetLinesByNameRequest | PlainMessage<GetLinesByNameRequest> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.GetConnectedStationsRequest
 */
export declare class GetConnectedStationsRequest extends Message<GetConnectedStationsRequest> {
  /**
   * @generated from field: uint32 from_station_group_id = 1;
   */
  fromStationGroupId: number;

  /**
   * @generated from field: uint32 to_station_group_id = 2;
   */
  toStationGroupId: number;

  constructor(data?: PartialMessage<GetConnectedStationsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.GetConnectedStationsRequest';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): GetConnectedStationsRequest;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): GetConnectedStationsRequest;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): GetConnectedStationsRequest;

  static equals(
    a:
      | GetConnectedStationsRequest
      | PlainMessage<GetConnectedStationsRequest>
      | undefined,
    b:
      | GetConnectedStationsRequest
      | PlainMessage<GetConnectedStationsRequest>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.StationNumber
 */
export declare class StationNumber extends Message<StationNumber> {
  /**
   * @generated from field: string line_symbol = 1;
   */
  lineSymbol: string;

  /**
   * @generated from field: string line_symbol_color = 2;
   */
  lineSymbolColor: string;

  /**
   * @generated from field: string line_symbol_shape = 3;
   */
  lineSymbolShape: string;

  /**
   * @generated from field: string station_number = 4;
   */
  stationNumber: string;

  constructor(data?: PartialMessage<StationNumber>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.StationNumber';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): StationNumber;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): StationNumber;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): StationNumber;

  static equals(
    a: StationNumber | PlainMessage<StationNumber> | undefined,
    b: StationNumber | PlainMessage<StationNumber> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.TrainType
 */
export declare class TrainType extends Message<TrainType> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: uint32 type_id = 2;
   */
  typeId: number;

  /**
   * @generated from field: uint32 group_id = 3;
   */
  groupId: number;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string name_katakana = 5;
   */
  nameKatakana: string;

  /**
   * @generated from field: optional string name_roman = 6;
   */
  nameRoman?: string;

  /**
   * @generated from field: optional string name_chinese = 7;
   */
  nameChinese?: string;

  /**
   * @generated from field: optional string name_korean = 8;
   */
  nameKorean?: string;

  /**
   * @generated from field: string color = 9;
   */
  color: string;

  /**
   * @generated from field: repeated app.trainlcd.grpc.Line lines = 10;
   */
  lines: Line[];

  /**
   * @generated from field: optional app.trainlcd.grpc.Line line = 11;
   */
  line?: Line;

  /**
   * @generated from field: app.trainlcd.grpc.TrainDirection direction = 12;
   */
  direction: TrainDirection;

  /**
   * @generated from field: app.trainlcd.grpc.TrainTypeKind kind = 13;
   */
  kind: TrainTypeKind;

  constructor(data?: PartialMessage<TrainType>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.TrainType';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): TrainType;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): TrainType;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): TrainType;

  static equals(
    a: TrainType | PlainMessage<TrainType> | undefined,
    b: TrainType | PlainMessage<TrainType> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.Station
 */
export declare class Station extends Message<Station> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: uint32 group_id = 2;
   */
  groupId: number;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string name_katakana = 4;
   */
  nameKatakana: string;

  /**
   * @generated from field: optional string name_roman = 5;
   */
  nameRoman?: string;

  /**
   * @generated from field: optional string name_chinese = 6;
   */
  nameChinese?: string;

  /**
   * @generated from field: optional string name_korean = 7;
   */
  nameKorean?: string;

  /**
   * @generated from field: optional string three_letter_code = 8;
   */
  threeLetterCode?: string;

  /**
   * @generated from field: repeated app.trainlcd.grpc.Line lines = 9;
   */
  lines: Line[];

  /**
   * @generated from field: optional app.trainlcd.grpc.Line line = 10;
   */
  line?: Line;

  /**
   * @generated from field: uint32 prefecture_id = 11;
   */
  prefectureId: number;

  /**
   * @generated from field: string postal_code = 12;
   */
  postalCode: string;

  /**
   * @generated from field: string address = 13;
   */
  address: string;

  /**
   * @generated from field: double latitude = 14;
   */
  latitude: number;

  /**
   * @generated from field: double longitude = 15;
   */
  longitude: number;

  /**
   * @generated from field: string opened_at = 16;
   */
  openedAt: string;

  /**
   * @generated from field: string closed_at = 17;
   */
  closedAt: string;

  /**
   * @generated from field: app.trainlcd.grpc.OperationStatus status = 18;
   */
  status: OperationStatus;

  /**
   * @generated from field: repeated app.trainlcd.grpc.StationNumber station_numbers = 19;
   */
  stationNumbers: StationNumber[];

  /**
   * @generated from field: app.trainlcd.grpc.StopCondition stop_condition = 20;
   */
  stopCondition: StopCondition;

  /**
   * @generated from field: optional double distance = 21;
   */
  distance?: number;

  /**
   * @generated from field: optional bool has_train_types = 22;
   */
  hasTrainTypes?: boolean;

  /**
   * @generated from field: optional app.trainlcd.grpc.TrainType train_type = 23;
   */
  trainType?: TrainType;

  constructor(data?: PartialMessage<Station>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.Station';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): Station;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): Station;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): Station;

  static equals(
    a: Station | PlainMessage<Station> | undefined,
    b: Station | PlainMessage<Station> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.SingleStationResponse
 */
export declare class SingleStationResponse extends Message<SingleStationResponse> {
  /**
   * @generated from field: app.trainlcd.grpc.Station station = 1;
   */
  station?: Station;

  constructor(data?: PartialMessage<SingleStationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.SingleStationResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SingleStationResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SingleStationResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SingleStationResponse;

  static equals(
    a: SingleStationResponse | PlainMessage<SingleStationResponse> | undefined,
    b: SingleStationResponse | PlainMessage<SingleStationResponse> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.MultipleStationResponse
 */
export declare class MultipleStationResponse extends Message<MultipleStationResponse> {
  /**
   * @generated from field: repeated app.trainlcd.grpc.Station stations = 1;
   */
  stations: Station[];

  constructor(data?: PartialMessage<MultipleStationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.MultipleStationResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): MultipleStationResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): MultipleStationResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): MultipleStationResponse;

  static equals(
    a:
      | MultipleStationResponse
      | PlainMessage<MultipleStationResponse>
      | undefined,
    b:
      | MultipleStationResponse
      | PlainMessage<MultipleStationResponse>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.MultipleTrainTypeResponse
 */
export declare class MultipleTrainTypeResponse extends Message<MultipleTrainTypeResponse> {
  /**
   * @generated from field: repeated app.trainlcd.grpc.TrainType train_types = 1;
   */
  trainTypes: TrainType[];

  constructor(data?: PartialMessage<MultipleTrainTypeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.MultipleTrainTypeResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): MultipleTrainTypeResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): MultipleTrainTypeResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): MultipleTrainTypeResponse;

  static equals(
    a:
      | MultipleTrainTypeResponse
      | PlainMessage<MultipleTrainTypeResponse>
      | undefined,
    b:
      | MultipleTrainTypeResponse
      | PlainMessage<MultipleTrainTypeResponse>
      | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.SingleLineResponse
 */
export declare class SingleLineResponse extends Message<SingleLineResponse> {
  /**
   * @generated from field: app.trainlcd.grpc.Line line = 1;
   */
  line?: Line;

  constructor(data?: PartialMessage<SingleLineResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.SingleLineResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SingleLineResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SingleLineResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SingleLineResponse;

  static equals(
    a: SingleLineResponse | PlainMessage<SingleLineResponse> | undefined,
    b: SingleLineResponse | PlainMessage<SingleLineResponse> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.MultipleLineResponse
 */
export declare class MultipleLineResponse extends Message<MultipleLineResponse> {
  /**
   * @generated from field: repeated app.trainlcd.grpc.Line lines = 1;
   */
  lines: Line[];

  constructor(data?: PartialMessage<MultipleLineResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.MultipleLineResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): MultipleLineResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): MultipleLineResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): MultipleLineResponse;

  static equals(
    a: MultipleLineResponse | PlainMessage<MultipleLineResponse> | undefined,
    b: MultipleLineResponse | PlainMessage<MultipleLineResponse> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.DistanceResponse
 */
export declare class DistanceResponse extends Message<DistanceResponse> {
  /**
   * @generated from field: uint32 station_id = 1;
   */
  stationId: number;

  /**
   * @generated from field: double distance = 2;
   */
  distance: number;

  /**
   * @generated from field: app.trainlcd.grpc.DistanceResponseState state = 3;
   */
  state: DistanceResponseState;

  constructor(data?: PartialMessage<DistanceResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.DistanceResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): DistanceResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): DistanceResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): DistanceResponse;

  static equals(
    a: DistanceResponse | PlainMessage<DistanceResponse> | undefined,
    b: DistanceResponse | PlainMessage<DistanceResponse> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.RouteResponse
 */
export declare class RouteResponse extends Message<RouteResponse> {
  /**
   * @generated from field: repeated app.trainlcd.grpc.Route routes = 1;
   */
  routes: Route[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<RouteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.RouteResponse';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): RouteResponse;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): RouteResponse;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): RouteResponse;

  static equals(
    a: RouteResponse | PlainMessage<RouteResponse> | undefined,
    b: RouteResponse | PlainMessage<RouteResponse> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.LineSymbol
 */
export declare class LineSymbol extends Message<LineSymbol> {
  /**
   * @generated from field: string symbol = 1;
   */
  symbol: string;

  /**
   * @generated from field: string color = 2;
   */
  color: string;

  /**
   * @generated from field: string shape = 3;
   */
  shape: string;

  constructor(data?: PartialMessage<LineSymbol>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.LineSymbol';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): LineSymbol;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): LineSymbol;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): LineSymbol;

  static equals(
    a: LineSymbol | PlainMessage<LineSymbol> | undefined,
    b: LineSymbol | PlainMessage<LineSymbol> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.Company
 */
export declare class Company extends Message<Company> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: uint32 railroad_id = 2;
   */
  railroadId: number;

  /**
   * @generated from field: string name_short = 3;
   */
  nameShort: string;

  /**
   * @generated from field: string name_katakana = 4;
   */
  nameKatakana: string;

  /**
   * @generated from field: string name_full = 5;
   */
  nameFull: string;

  /**
   * @generated from field: string name_english_short = 6;
   */
  nameEnglishShort: string;

  /**
   * @generated from field: string name_english_full = 7;
   */
  nameEnglishFull: string;

  /**
   * @generated from field: optional string url = 8;
   */
  url?: string;

  /**
   * @generated from field: app.trainlcd.grpc.CompanyType type = 9;
   */
  type: CompanyType;

  /**
   * @generated from field: app.trainlcd.grpc.OperationStatus status = 10;
   */
  status: OperationStatus;

  /**
   * @generated from field: string name = 11;
   */
  name: string;

  constructor(data?: PartialMessage<Company>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.Company';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): Company;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): Company;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): Company;

  static equals(
    a: Company | PlainMessage<Company> | undefined,
    b: Company | PlainMessage<Company> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.Line
 */
export declare class Line extends Message<Line> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string name_short = 2;
   */
  nameShort: string;

  /**
   * @generated from field: string name_katakana = 3;
   */
  nameKatakana: string;

  /**
   * @generated from field: string name_full = 4;
   */
  nameFull: string;

  /**
   * @generated from field: optional string name_roman = 5;
   */
  nameRoman?: string;

  /**
   * @generated from field: optional string name_chinese = 6;
   */
  nameChinese?: string;

  /**
   * @generated from field: optional string name_korean = 7;
   */
  nameKorean?: string;

  /**
   * @generated from field: string color = 8;
   */
  color: string;

  /**
   * @generated from field: app.trainlcd.grpc.LineType line_type = 9;
   */
  lineType: LineType;

  /**
   * @generated from field: repeated app.trainlcd.grpc.LineSymbol line_symbols = 10;
   */
  lineSymbols: LineSymbol[];

  /**
   * @generated from field: app.trainlcd.grpc.OperationStatus status = 11;
   */
  status: OperationStatus;

  /**
   * @generated from field: optional app.trainlcd.grpc.Station station = 12;
   */
  station?: Station;

  /**
   * @generated from field: optional app.trainlcd.grpc.Company company = 13;
   */
  company?: Company;

  /**
   * 同一種別のリクエストの場合出力する
   *
   * @generated from field: optional app.trainlcd.grpc.TrainType train_type = 14;
   */
  trainType?: TrainType;

  /**
   * @generated from field: double average_distance = 15;
   */
  averageDistance: number;

  constructor(data?: PartialMessage<Line>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.Line';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): Line;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): Line;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): Line;

  static equals(
    a: Line | PlainMessage<Line> | undefined,
    b: Line | PlainMessage<Line> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.SingleLine
 */
export declare class SingleLine extends Message<SingleLine> {
  /**
   * @generated from field: app.trainlcd.grpc.Line line = 1;
   */
  line?: Line;

  constructor(data?: PartialMessage<SingleLine>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.SingleLine';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): SingleLine;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): SingleLine;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): SingleLine;

  static equals(
    a: SingleLine | PlainMessage<SingleLine> | undefined,
    b: SingleLine | PlainMessage<SingleLine> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.MultipleLine
 */
export declare class MultipleLine extends Message<MultipleLine> {
  /**
   * @generated from field: repeated app.trainlcd.grpc.Line lines = 1;
   */
  lines: Line[];

  constructor(data?: PartialMessage<MultipleLine>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.MultipleLine';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): MultipleLine;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): MultipleLine;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): MultipleLine;

  static equals(
    a: MultipleLine | PlainMessage<MultipleLine> | undefined,
    b: MultipleLine | PlainMessage<MultipleLine> | undefined
  ): boolean;
}

/**
 * @generated from message app.trainlcd.grpc.Route
 */
export declare class Route extends Message<Route> {
  /**
   * @generated from field: uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: repeated app.trainlcd.grpc.Station stops = 2;
   */
  stops: Station[];

  constructor(data?: PartialMessage<Route>);

  static readonly runtime: typeof proto3;
  static readonly typeName = 'app.trainlcd.grpc.Route';
  static readonly fields: FieldList;

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>
  ): Route;

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>
  ): Route;

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>
  ): Route;

  static equals(
    a: Route | PlainMessage<Route> | undefined,
    b: Route | PlainMessage<Route> | undefined
  ): boolean;
}
